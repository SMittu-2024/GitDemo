<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="10" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-11-05T16:30:03 EST" name="Loan Department" finished-at="2024-11-05T16:30:03 EST" duration-ms="56">
    <groups>
      <group name="Smoke">
        <method signature="day2.demo2()[pri:0, instance:test.day2@2fb3536e]" name="demo2" class="test.day2"/>
        <method signature="day3.LoginLoan()[pri:0, instance:test.day3@1151e434]" name="LoginLoan" class="test.day3"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2024-11-05T16:30:03 EST" name="Car Loan" finished-at="2024-11-05T16:30:03 EST" duration-ms="56">
      <class name="test.day3">
        <test-method is-config="true" signature="Bfsuite()[pri:0, instance:test.day3@1151e434]" started-at="2024-11-05T16:30:03 EST" name="Bfsuite" finished-at="2024-11-05T16:30:03 EST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Bfsuite -->
        <test-method signature="LoginLoan()[pri:0, instance:test.day3@1151e434]" started-at="2024-11-05T16:30:03 EST" name="LoginLoan" finished-at="2024-11-05T16:30:03 EST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginLoan -->
        <test-method signature="MobileLoginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@1151e434]" started-at="2024-11-05T16:30:03 EST" name="MobileLoginCarLoan" data-provider="getData" finished-at="2024-11-05T16:30:03 EST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstusrname]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstusrpwd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginCarLoan -->
        <test-method signature="MobileLoginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@1151e434]" started-at="2024-11-05T16:30:03 EST" name="MobileLoginCarLoan" data-provider="getData" finished-at="2024-11-05T16:30:03 EST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondusrname]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondusrpwd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginCarLoan -->
        <test-method signature="MobileLoginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@1151e434]" started-at="2024-11-05T16:30:03 EST" name="MobileLoginCarLoan" data-provider="getData" finished-at="2024-11-05T16:30:03 EST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdusrname]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdusrpwd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginCarLoan -->
        <test-method signature="MobileSigninCarLoan()[pri:0, instance:test.day3@1151e434]" started-at="2024-11-05T16:30:03 EST" name="MobileSigninCarLoan" finished-at="2024-11-05T16:30:03 EST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSigninCarLoan -->
        <test-method is-config="true" signature="Afsuite()[pri:0, instance:test.day3@1151e434]" started-at="2024-11-05T16:30:04 EST" name="Afsuite" finished-at="2024-11-05T16:30:04 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Afsuite -->
      </class> <!-- test.day3 -->
    </test> <!-- Car Loan -->
    <test started-at="2024-11-05T16:30:03 EST" name="Personal Loan" finished-at="2024-11-05T16:30:03 EST" duration-ms="46">
      <class name="test.day2">
        <test-method is-config="true" signature="prerequisite()[pri:0, instance:test.day2@2fb3536e]" started-at="2024-11-05T16:30:03 EST" name="prerequisite" finished-at="2024-11-05T16:30:03 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequisite -->
        <test-method signature="demo2()[pri:0, instance:test.day2@2fb3536e]" started-at="2024-11-05T16:30:03 EST" name="demo2" finished-at="2024-11-05T16:30:03 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo2 -->
        <test-method is-config="true" signature="lastexecution()[pri:0, instance:test.day2@2fb3536e]" started-at="2024-11-05T16:30:03 EST" name="lastexecution" finished-at="2024-11-05T16:30:03 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastexecution -->
      </class> <!-- test.day2 -->
      <class name="test.day1">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:test.day1@47faa49c]" started-at="2024-11-05T16:30:03 EST" name="beforeClass" finished-at="2024-11-05T16:30:03 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="demo1()[pri:0, instance:test.day1@47faa49c]" started-at="2024-11-05T16:30:03 EST" name="demo1" finished-at="2024-11-05T16:30:03 EST" duration-ms="10" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.day1.demo1(day1.java:32)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo1 -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:test.day1@47faa49c]" started-at="2024-11-05T16:30:03 EST" name="afterClass" finished-at="2024-11-05T16:30:03 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test.day1 -->
    </test> <!-- Personal Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
